"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ
import os
# Initialise environment variables
env = environ.Env()
environ.Env.read_env()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env.bool('DEBUG')

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')

# Custom user model
AUTH_USER_MODEL = 'accounts.CustomUser'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'core',
    'rest_framework',
    'accounts',
    'audit',
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": "mcrohtak",
        "USER": "siddahrth",
        "PASSWORD": "newpassword",
        "HOST": "127.0.0.1",
        "PORT": "5433",
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOWED_ORIGINS = env.list('CORS_ALLOWED_ORIGINS')
CORS_ALLOW_CREDENTIALS = env.bool('CORS_ALLOW_CREDENTIALS')


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': env.int('DEFAULT_PAGE_SIZE'),  
}

raw_choices = env(
    'USER_TYPE_CHOICES',
    default='JE:Junior Engineer,AE:Assistant Engineer,XEN:Executive Engineer,SE:Superintending Engineer,CE:Chief Engineer,JCMC:Joint Commissioner,CMC:Commissioner'
)

USER_TYPE_CHOICES = []
for item in raw_choices.split(","):
    try:
        value, label = item.split(":", 1)
        USER_TYPE_CHOICES.append((value.strip(), label.strip()))
    except ValueError:
        pass

globals()['USER_TYPE_CHOICES'] = USER_TYPE_CHOICES

# settings.py

# Road Category Choices
ROAD_CATEGORY_CHOICES = (
    ('City Road', 'City Road'),
    ('Major District Road', 'Major District Road'),
    ('National Highway', 'National Highway'),
    ('State Highway', 'State Highway'),
    ('Other', 'Other'),
)

# Road Type Choices
ROAD_TYPE_CHOICES = (
    ('1', 'Road Type 1'),
    ('2', 'Road Type 2'),
    ('3', 'Road Type 3'),
    ('4', 'Road Type 4'),
    ('5', 'Road Type 5'),
    ('6', 'Road Type 6'),
    ('7', 'Road Type 7'),
    ('8', 'Road Type 8'),
    ('9', 'Road Type 9'),
    ('10', 'Road Type 10'),
    ('others', 'Other Road Type'),
)

# Material Type Choices
MATERIAL_TYPE_CHOICES = (
    ('CC', 'Material Type CC'),
    ('KACCHA', 'Material Type KACCHA'),
    ('METALIC', 'Material Type METALIC'),
    ('Paver Block', 'Material Type Paver Block'),
    ('Other', 'Other'),
)



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}


from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=120), 
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),     
    "ROTATE_REFRESH_TOKENS": False,
    "BLACKLIST_AFTER_ROTATION": True,
    "UPDATE_LAST_LOGIN": False,
}


MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

SITE_URL =  "http://localhost:8000"
SENDERS_EMAIL = "siddharthnama2003@gmail.com"
Frontend_URL = "http://localhost:5173"


EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "siddharthnama2003@gmail.com"
EMAIL_HOST_PASSWORD = "ltsudnggczmqshlq" 
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER


